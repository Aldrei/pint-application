# This is a basic workflow to help you get started with Actions

name: CI :D

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # installing Node
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          # this will use the latest Node 16 version
          node-version: 16.x

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Slack Notification
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Get current branch
        run: |
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
      - name: Uppercase branch
        id: branch-uppercase
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ env.GIT_BRANCH }}    
      - name: Set environment url and slack webhook variables
        env:
          GIT_BRANCH_UPPER: ${{ steps.branch-uppercase.outputs.uppercase }}
        run: |
          echo "ENV_URL=DEPLOY_URL_${{ env.GIT_BRANCH_UPPER }}" >> $GITHUB_ENV
          if [[ "${{ env.GIT_BRANCH_UPPER }}" != "MASTER" ]]; then
            echo "SLACK_URL=${{ secrets.SLACK_URL_NONPROD }}" >> $GITHUB_ENV
          else
            echo "SLACK_URL=${{ secrets.SLACK_URL_PROD }}" >> $GITHUB_ENV
          fi
      - name: call slack action
        uses: Aldrei/github-action-build-slack-notification@v1.0.0
        with:
          app_name: ${{github.repository}}
          git_branch: ${{ github.ref }}
          git_sha: ${{ github.sha }}
          slack_url: ${{ env.SLACK_URL }}
          deploy_url: ${{ secrets[env.ENV_URL] }}
